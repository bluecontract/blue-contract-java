name: Testing Events
type: 8nxee3jJSSUg9kwArUSn4enzQdKPYLCVCRkZUrdFmqNU
properties:
  caughtEvents: 0
  localContractStartedWhenInitializing:
    type: GGo3aanJBb5DdzXovf7ibiBs3bZkXzHeizTCgYFhLWpQ
    id: 1
workflows:
  - name: StartLocalContract
    trigger:
      event:
        type: Contract Initialized
    steps:
      - name: InitializeContract
        type: Initialize Local Contract Step
        contract:
          name: My Local Contract
          type:
            blueId: 8nxee3jJSSUg9kwArUSn4enzQdKPYLCVCRkZUrdFmqNU
          properties:
            x: 0
          workflows:
            - name: Initial
              trigger:
                event:
                  type: Contract Initialized
              steps:
                - name: TriggerEvent
                  type: Trigger Event Step
                  event:
                    type: 6ZekovRNmg5PPy6Y4yATmnWqNDUoFhT5LowxAtkP7mta
                    zz: 12
                - name: UpdateStep
                  type: Update Step
                  changeset:
                    - op: replace
                      path: /properties/x
                      val: 1
                - name: UpdateStep2
                  type: Update Step
                  changeset:
                    - op: add
                      path: /properties/y
                      val: 1


  - name: ExpectEvents
    trigger:
      event:
        type: DgQKBxaG8m5xfuZSQDm3yJqGZusU8k7tuizzQgg2XMa5
      contract: ${contract("/properties/localContractStartedWhenInitializing")}
    steps:
      - name: UpdateStep
        type: Update Step
        changeset:
          - op: replace
            path: /properties/caughtEvents
            val: ${contract("/properties/caughtEvents") + 1}